/*
 * Expense Tracker API
 *
 * CRUD management of Expense Tracker
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using ExpenseTrackerAPI.CodeGen.Attributes;
using ExpenseTrackerAPI.CodeGen.Models;

namespace ExpenseTrackerAPI.CodeGen.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// Create a new expense entry
        /// </summary>
        /// <param name="expenseDTO">Expense payload</param>
        /// <response code="201">The newly created expense</response>
        /// <response code="500">Unexpected error</response>
        [HttpPost]
        [Route("/api/v1/expenses")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(ExpenseDTO))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorDTO))]
        public abstract Task<IActionResult> AddExpense([FromBody]ExpenseDTO expenseDTO);

        /// <summary>
        /// Fetch a expense
        /// </summary>
        /// <param name="id">The unique identifier</param>
        /// <response code="200">A expense</response>
        /// <response code="404">No expense found for the provided &#x60;Id&#x60;</response>
        /// <response code="500">Unexpected error</response>
        [HttpGet]
        [Route("/api/v1/expenses/{id}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ExpenseDTO))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorDTO))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorDTO))]
        public abstract Task<IActionResult> GetExpense([FromRoute (Name = "id")][Required]Guid id);
    }
}
